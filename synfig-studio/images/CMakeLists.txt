# ICONS is a list of images that will be generated by the build_images target.
#
# By default, the generated files will be in PNG format. If you need a different
# format, you can add .ext after the file name, and synfig try to generate 
# it for you.
#
# If you need custom parameters for generating the image, you can add it
# after the file name, separating them with a colon, for example:
# myimage:"--arg 1 --arg 2".
# But in this case, you need to specify the name of the input file,
# even if it matches the name of the icon.
set(ICONS
    installer_logo.bmp
    installer_logo_osx
    clear_redo_icon
    clear_undo_icon
    reset_colors_icon
    swap_colors_icon
    select_all_child_layers_icon
    sif_icon
    synfig_icon
    about_icon
    valuenode_icon
    duplicate_icon
    group_icon
    jack_icon

    keyframe_lock_past_on_icon:"-i keyframe_lock_icons.sif --time 0f"
    keyframe_lock_past_off_icon:"-i keyframe_lock_icons.sif --time 1f"
    keyframe_lock_future_on_icon:"-i keyframe_lock_icons.sif --time 2f"
    keyframe_lock_future_off_icon:"-i keyframe_lock_icons.sif --time 3f"

    animate_seek_next_keyframe_icon:"-i framedial_icons.sif --time 0f"
    animate_seek_prev_keyframe_icon:"-i framedial_icons.sif --time 1f"
    animate_seek_next_frame_icon:"-i framedial_icons.sif --time 2f"
    animate_seek_prev_frame_icon:"-i framedial_icons.sif --time 3f"
    animate_seek_begin_icon:"-i framedial_icons.sif --time 4f"
    animate_seek_end_icon:"-i framedial_icons.sif --time 5f"
    animate_play_icon:"-i framedial_icons.sif --time 6f"
    animate_stop_icon:"-i framedial_icons.sif --time 7f"
    animate_pause_icon:"-i framedial_icons.sif --time 8f"
    animate_loop_icon:"-i framedial_icons.sif --time 9f"
    animate_bounds_icon:"-i framedial_icons.sif --time 10f"
    animate_bound_lower_icon:"-i framedial_icons.sif --time 11f"
    animate_bound_upper_icon:"-i framedial_icons.sif --time 12f"
    animate_mode_off_icon:"-i animate_mode_icons.sif --time 0f"
    animate_mode_on_icon:"-i animate_mode_icons.sif --time 1f"

    rename_icon
    set_fill_color
    set_outline_color
    duck_position_icon
    duck_vertex_icon
    duck_tangent_icon
    duck_radius_icon
    duck_width_icon
    duck_angle_icon
    show_grid_icon
    snap_grid_icon
    show_guideline_icon
    snap_guideline_icon
    onion_skin_icon
    incr_resolution_icon
    decr_resolution_icon
    render_options_icon
    preview_options_icon
    background_rendering_icon
    action_set_layer_description_icon
    action_add_to_set_icon
    action_remove_from_set_icon
    action_export_icon
    action_unexport_icon
    action_flat_interpolation_icon
    action_interpolate_interpolation_icon
    action_peak_interpolation_icon
    action_rounded_interpolation_icon
    action_squared_interpolation_icon

    action_doc_new_icon:"-i action_doc_icons.sif --time 1f"
    action_doc_open_icon:"-i action_doc_icons.sif --time 2f"
    action_doc_save_icon:"-i action_doc_icons.sif --time 3f"
    action_doc_saveas_icon:"-i action_doc_icons.sif --time 4f"
    action_doc_saveall_icon:"-i action_doc_icons.sif --time 5f"
    action_doc_redo_icon:"-i action_doc_icons.sif --time 7f"
    action_doc_undo_icon:"-i action_doc_icons.sif --time 6f"

    interpolation_type_tcb_icon:"-i interpolation_type_icons.sif --time 1f"
    interpolation_type_ease_icon:"-i interpolation_type_icons.sif --time 3f"
    interpolation_type_const_icon:"-i interpolation_type_icons.sif --time 4f"
    interpolation_type_linear_icon:"-i interpolation_type_icons.sif --time 2f"
    interpolation_type_clamped_icon:"-i interpolation_type_icons.sif --time 5f"
    valuenode_forbidanimation_icon:"-i interpolation_type_icons.sif --time 7f"

    layer_blur_blur_icon
    layer_blur_motion_icon
    layer_blur_radial_icon
    layer_distortion_curvewarp_icon
    layer_distortion_insideout_icon
    layer_distortion_noise_icon
    layer_distortion_spherize_icon
    layer_distortion_stretch_icon
    layer_distortion_twirl_icon
    layer_distortion_warp_icon
    layer_example_filledrectangle_icon
    layer_example_metaballs_icon
    layer_example_simplecircle_icon
    layer_filter_clamp_icon
    layer_filter_colorcorrect_icon
    layer_filter_halftone2_icon
    layer_filter_halftone3_icon
    layer_filter_lumakey_icon
    layer_fractal_julia_icon
    layer_fractal_mandelbrot_icon
    layer_geometry_checkerboard_icon
    layer_geometry_circle_icon
    layer_geometry_outline_icon
    layer_geometry_advanced_outline_icon
    layer_geometry_polygon_icon
    layer_geometry_rectangle_icon
    layer_geometry_region_icon
    layer_geometry_solidcolor_icon
    layer_geometry_star_icon
    layer_gradient_conical_icon
    layer_gradient_curve_icon
    layer_gradient_linear_icon
    layer_gradient_noise_icon
    layer_gradient_radial_icon
    layer_gradient_spiral_icon
    layer_other_duplicate_icon
    layer_other_importimage_icon:"-i canvas_and_importimage_icons.sif --time 1f"
    layer_other_group_icon
    layer_other_plant_icon
    layer_other_stroboscope_icon
    layer_other_supersample_icon
    layer_other_skeleton_icon
    layer_other_sound_icon
    layer_other_switch_icon
    layer_other_text_icon
    layer_other_timeloop_icon
    layer_other_xorpattern_icon
    layer_stylize_bevel_icon
    layer_stylize_shade_icon
    layer_transform_rotate_icon
    layer_transform_scale_icon
    layer_transform_translate_icon

    tool_brush_icon
    tool_cutout_icon
    tool_spline_icon
    tool_circle_icon
    tool_draw_icon
    tool_eyedrop_icon
    tool_fill_icon
    tool_gradient_icon
    tool_mirror_icon
    tool_normal_icon
    tool_polyline_icon
    tool_rectangle_icon
    tool_rotate_icon
    tool_scale_icon
    tool_sketch_icon
    tool_smooth_move_icon
    tool_star_icon
    tool_text_icon
    tool_width_icon
    tool_zoom_icon

    type_angle_icon
    type_splinepoint_icon
    type_bool_icon
    type_canvas_icon
    type_color_icon
    type_gradient_icon
    type_integer_icon
    type_list_icon
    type_real_icon
    type_segment_icon
    type_string_icon
    type_time_icon
    type_vector_icon

    canvas_icon:"-i canvas_and_importimage_icons.sif --time 2f"
    library_icon
    graphs_icon
    set_icon
    history_icon
    info_icon
    keyframe_icon
    layer_icon
    meta_data_icon
    navigator_icon
    palette_icon
    parameters_icon
    time_track_icon

    utils_chain_link_on_icon:"-i utils_chain_link_icons.sif --time 0f"
    utils_chain_link_off_icon:"-i utils_chain_link_icons.sif --time 1f"
    utils_timetrack_align_icon
)

# TODO(art): development splash screen
# There is no splash_screen_development.sif image here, it is created using 
# the splash_screen_development.sh script, but maybe we should do something
# with it because this script is not portable. So i am not sure it will works
# on Windows.

if (DEVELOPMENT_SNAPSHOT)
#    set(SPLASH_SCREEN splash_screen:"-i splash_screen_development.sif --time 0f")
    set(SPLASH_SCREEN splash_screen)
else()
    set(SPLASH_SCREEN splash_screen)
endif()
#set()

set(IMAGES
#    about_icon
#    logo
#    splash_screen
#    synfig_icon
    ${SPLASH_SCREEN}
    ${ICONS}
)


set(BUILD_IMAGES "")
foreach(DST ${IMAGES})

    string(REPLACE ":" ";" BUF ${DST})
    list(LENGTH BUF TARGET_LEN)
    if (${TARGET_LEN} GREATER 1)
        list(GET BUF 0 DST)
        list(GET BUF 1 ARGS)

        # After splitting arguments, ARGS part is remains surrounded
        # by double quotes, and can't be parsed by the shell.
        # At this time command line looks like `synfig ... "--time 0"`
        # So we remove quotes before proceed.
        string(REPLACE "\"" "" ARGS ${ARGS})
        set(SRC "")
    else()
        set(ARGS "--time 0f")
        set(SRC ${CMAKE_CURRENT_SOURCE_DIR}/${DST}.sif)
    endif()

    # Looking for an extension (if it is present)
    set(EXTENSION "png")
    string(REPLACE "." ";" BUF ${DST})
    list(LENGTH BUF TARGET_LEN)
    if (${TARGET_LEN} GREATER 1)
        list(GET BUF 0 DST)
        list(GET BUF 1 EXTENSION)
        set(SRC ${CMAKE_CURRENT_SOURCE_DIR}/${DST}.sif) # source files always with a .sif extension
    endif()

    # Spaces in the string (if we use custom arguments) is escaped with a 
    # backslashes '\ ', and can't be parsed by the shell. So unescape them back.
    separate_arguments(ARGS_LIST WINDOWS_COMMAND "${ARGS}")

    add_custom_command(
      OUTPUT ${DST}.${EXTENSION}
      #COMMAND echo   ${SRC} ${ARGS_LIST} -o ${CMAKE_CURRENT_BINARY_DIR}/${DST}.${EXTENSION} --quiet
      COMMAND synfig ${SRC} ${ARGS_LIST} -o ${CMAKE_CURRENT_BINARY_DIR}/${DST}.${EXTENSION} --quiet
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    )
    list(APPEND BUILD_IMAGES ${DST}.${EXTENSION})

    install(
        FILES ${CMAKE_CURRENT_BINARY_DIR}/${DST}.${EXTENSION}
        DESTINATION share/pixmaps/synfigstudio
    )
endforeach()

add_custom_target(build_images DEPENDS ${BUILD_IMAGES})

## TODO: configure icon size
#foreach (ICON IN ITEMS ${ICONS})
#    set(IMG_SIZE_${ICON} 32 32)
#endforeach()